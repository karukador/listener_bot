import math
import telebot
import logging
from database import create_table, insert_row, count_all_blocks
from speechkit import speech_to_text
from telebot.types import BotCommand, BotCommandScope, ReplyKeyboardMarkup
from system_config import ADMIN_ID, CONTENT_TYPES, MAX_USER_STT_BLOCKS
from config import TOKEN

bot = telebot.TeleBot(token=TOKEN)

# –ø—Ä–∏ –≤—ã–Ω–µ—Å–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª–∏–∫, —á—Ç–æ-—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π, –ø—É—Å—Ç—å —Ç–µ–∫—Å—Ç –∑–¥–µ—Å—å –ø–æ–ª–µ–∂–∏—Ç
help_message = ('–¢–∞–∫ –∫–∞–∫ —è –∏—Å–ø–æ–ª—å–∑—É—é –ø–ª–∞—Ç–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å '
                '–Ω–µ–π—Ä–æ—Å–µ—Ç—å—é, —Ç–æ —É –≤–∞—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—É–¥–∏–æ–±–ª–æ–∫–æ–≤ '
                '–¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è.\n\n'
                '<b>–ß—Ç–æ —Ç–∞–∫–æ–µ SpeechKit?</b>\n'
                '<b>SpeechKit</b> - —ç—Ç–æ –Ω–∞–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å '
                '–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —è–∑—ã–∫–æ–º, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∫–æ–º–ø–∞–Ω–∏–µ–π –Ø–Ω–¥–µ–∫—Å. –û–Ω '
                '–≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏, —Å–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏, –∞ —Ç–∞–∫–∂–µ '
                'API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ —á–µ—Ä–µ–∑ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã.\n\n'
                '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —Å–∫–æ–ª—å–∫–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –≤—ã —É–∂–µ –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏, –≤—ã —Å–º–æ–∂–µ—Ç–µ '
                '–Ω–∞–π—Ç–∏, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"</b>.\n'
                '<b>"–û–∑–≤—É—á–∏—Ç—å"</b> - –Ω–∞—á–Ω–∏—Ç–µ –æ–∑–≤—É—á–∏–≤–∞—Ç—å —Ç–µ–∫—Å—Ç.')

manual_message = "–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∞—É–¥–∏–æ. –ì–æ–≤–æ—Ä–∏—Ç–µ –≤–Ω—è—Ç–Ω–æ –∏ —á—ë—Ç–∫–æ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∏—è."


# –ö–æ–º–∞–Ω–¥–∞ /debug —Å –¥–æ—Å—Ç—É–ø–æ–º —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
@bot.message_handler(commands=["debug"])
def send_logs(message):
    user_id = message.chat.id

    if user_id == ADMIN_ID:
        try:

            with open("log_file.txt", "rb") as f:
                bot.send_document(message.chat.id, f)
                logging.info("–ª–æ–≥–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
        except telebot.apihelper.ApiTelegramException:

            bot.send_message(message.chat.id, "–õ–æ–≥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")

    else:
        bot.send_message(message.chat.id, "–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        logging.info(f"{user_id} –ø—ã—Ç–∞–ª—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ª–æ–≥–∞–º, –Ω–µ —è–≤–ª—è—è—Å—å –∞–¥–º–∏–Ω–æ–º")


# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_menu_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add("üó£Ô∏è –ü—Ä–æ—Å–ª—É—à–∞—Ç—å")


def register_comands(message):
    commands = [  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ —Å –æ–±–ª–∞—Å—Ç—å—é –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º
        BotCommand('start', '–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞'),
        BotCommand('help', '–æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ'),
        BotCommand('stt', '–ø—Ä–æ—Å–ª—É—à–∞—Ç—å —Ç–µ–∫—Å—Ç')]
    bot.set_my_commands(commands)
    BotCommandScope('private', chat_id=message.chat.id)


# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=["start"])
def send_welcome(message):
    logging.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
    bot.reply_to(
        message,
        '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é SpeechKit. –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "üó£Ô∏è –ü—Ä–æ—Å–ª—É—à–∞—Ç—å" –∏ –∑–∞–ø–∏—à–∏—Ç–µ –∞—É–¥–∏–æ '
        '–¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è.',
        reply_markup=main_menu_keyboard)
    register_comands(message)


# –∫–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=["help"])
def about_bot(message):
    bot.send_message(message.chat.id, help_message,
                     reply_markup=main_menu_keyboard, parse_mode="html")


@bot.message_handler(content_types=["text"], func=lambda message: message.text.lower() == "üó£Ô∏è –ø—Ä–æ—Å–ª—É—à–∞—Ç—å")
# —Ñ—É–Ω–∫—Ü–∏—è, –Ω–∞–ø—Ä–∞–≤–ª—è—é—â–∞—è –∞—É–¥–∏–æ –æ—Ç speechkit
# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /stt
@bot.message_handler(commands=['stt'])
def stt_handler(message):
    user_id = message.from_user.id
    bot.send_message(user_id, '–û—Ç–ø—Ä–∞–≤—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —è –µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª!')
    bot.register_next_step_handler(message, stt)


# –ü–µ—Ä–µ–≤–æ–¥–∏–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã stt
def stt(message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ
    if not message.voice:
        bot.send_message(user_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    # –°—á–∏—Ç–∞–µ–º –∞—É–¥–∏–æ–±–ª–æ–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É–º–º—É –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –∞—É–¥–∏–æ–±–ª–æ–∫–æ–≤
    stt_blocks = is_stt_block_limit(message, message.voice.duration)
    if not stt_blocks:
        return

    file_id = message.voice.file_id  # –ø–æ–ª—É—á–∞–µ–º id –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    file_info = bot.get_file(file_id)  # –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ–ª–æ—Å–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    file = bot.download_file(file_info.file_path)  # —Å–∫–∞—á–∏–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    status, text = speech_to_text(file)
    if status:
        logging.info(f"–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {user_id}: {text}")
        bot.send_message(user_id, text, reply_to_message_id=message.id)

    else:
        logging.debug("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ —Ä–µ—á–∏: ", text)
    if status:
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–æ–ª-–≤–æ –∞—É–¥–∏–æ–±–ª–æ–∫–æ–≤ –≤ –ë–î
        insert_row(user_id, text, 'stt_blocks', stt_blocks)


def is_stt_block_limit(message, duration):
    user_id = message.from_user.id

    # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Å–µ–∫—É–Ω–¥—ã –≤ –∞—É–¥–∏–æ–±–ª–æ–∫–∏
    audio_blocks = math.ceil(duration / 15)  # –æ–∫—Ä—É–≥–ª—è–µ–º –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É
    # –§—É–Ω–∫—Ü–∏—è –∏–∑ –ë–î –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –≤—Å–µ—Ö –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∞—É–¥–∏–æ–±–ª–æ–∫–æ–≤
    all_blocks = int(count_all_blocks(user_id) or 0) + int(audio_blocks)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞—É–¥–∏–æ –¥–ª–∏—Ç—Å—è –º–µ–Ω—å—à–µ 30 —Å–µ–∫—É–Ω–¥
    if duration >= 30:
        msg = "SpeechKit STT —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –º–µ–Ω—å—à–µ 30 —Å–µ–∫—É–Ω–¥"
        bot.send_message(user_id, msg)
        return None

    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º all_blocks —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∞—É–¥–∏–æ–±–ª–æ–∫–æ–≤
    if all_blocks >= MAX_USER_STT_BLOCKS:
        msg = (f"–ü—Ä–µ–≤—ã—à–µ–Ω –æ–±—â–∏–π –ª–∏–º–∏—Ç SpeechKit STT {MAX_USER_STT_BLOCKS}. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ {all_blocks} –±–ª–æ–∫–æ–≤. –î–æ—Å—Ç—É–ø–Ω–æ: "
               f"{MAX_USER_STT_BLOCKS - all_blocks}")
        bot.send_message(user_id, msg)
        return None

    return audio_blocks


@bot.message_handler(content_types=CONTENT_TYPES)
def any_msg(message):
    bot.send_message(message.chat.id, '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ–∑–≤—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç, —Ç–æ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üó£Ô∏è –ü—Ä–æ—Å–ª—É—à–∞—Ç—å"',
                     reply_markup=main_menu_keyboard)


if __name__ == "__main__":
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
        datefmt="%Y-%m-%d %H",
        filename="log_file.log",
        filemode="w",
        force=True)
    create_table()  # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î
    bot.infinity_polling()  # –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ üéâ
    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
